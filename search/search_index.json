{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"about/","text":"Hi, My name is V\u0169 Quang Tr\u1ecdng, Code Inside Out is my personal blog in which I take notes about what I've learned, and what I'm interested in. I am working in Embedded Automotive field, mainly focusing on In Vehicle Infortainment (IVI) and Advanced Driver-Assistance Systems (ADAS). I also do some personal projects for my sweet home, and some others as my freelance jobs. I cannot remember all of them in details, so I need somewhere to write down, I also need them searchable to quicky jump to what I want. That's the reason for me to start blogging. Hope you can find something helpful here too. Let's code ^^ .md-typeset p { text-align: justify; }","title":"About"},{"location":"projects/","text":"I have published some of my projects on vuquangtrong , if you are interested, feel free to ask me for more details. Here are some featured ones: Blogging with Material for MkDocs is the theme I am using for this blog, which has some modification to support blogging like homepage, list of posts, and tags. Simplify Theme for Pelican static site generator. It was used for this blog once. VAcamera make use of Accord framework and FFMPEG engine to record video streams from 2 cameras and write output to mp4 files. Tiva C TM4C123G LaunchPad practice on ARM Cortext-M4F , contain Bring Up, Sensors, LCD, BootLoader and Firmware Update labs. SMS WebHub use a mobile phone to process commands from a VPS via websocket , include sending SMS, checking Balance, calling a number, forwarding messages Other Proof of Concept projects has prototypes for freelance projects I have done, as their source code are not allowed to be published","title":"Projects"},{"location":"tags/","text":"","title":"Tags"},{"location":"posts/","text":"","title":"Blog"},{"location":"posts/markdown_syntax/","text":"Markdown Syntax \u2693\ufe0e Metadata \u2693\ufe0e In a markdown file, if you add metadata in YAML format at the begining of the file, it will be used to create page.meta object. Metadata is not shown in the page content, but it is used in rendering template to HTML. It is recommended to have at least 3 fields title , description , and tags , in each post. --- title : Lorem ipsum dolor sit amet description : Nullam urna elit, malesuada eget finibus ut, ac tortor. tags : - tag1 - tag2 --- Headings \u2693\ufe0e To create a heading, add number signs ( # ) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three ( <h3> ), use three number signs ( ### My Header level 3 ). Please remember to always put a space between the number signs and the heading name. Paragraphs \u2693\ufe0e Writing a paragraph is very straight forward. You just write down your sentences and they will be wrapped in <p> tags. To create paragraphs, use a blank line to separate one or more lines of text. To create a line break ( <br> ), end a line with two or more spaces, and then type return. You can add emphasis by making text bold or italic : To bold text, add two asterisks or underscores before and after a word or phrase To italicize text, add one asterisk or underscore before and after a word or phrase. To create a blockquote, add a > in front of a paragraph. Here is an example: Markdown: Paragraphs are the **building blocks** of papers. Many students define paragraphs in _terms of length_ : a paragraph is a group of at least five sentences, a paragraph is half a page long, etc. In reality, though, the __unity and coherence of ideas__ among sentences is what constitutes a paragraph. > excerpt from: _https://writingcenter.unc.edu/tips-and-tools/paragraphs_ Rendered: Paragraphs are the building blocks of papers. Many students define paragraphs in terms of length : a paragraph is a group of at least five sentences, a paragraph is half a page long, etc. In reality, though, the unity and coherence of ideas among sentences is what constitutes a paragraph. excerpt from: https://writingcenter.unc.edu/tips-and-tools/paragraphs Marks \u2693\ufe0e Beside standard marks to emphasize text as bold or italic , extended markdown supports some extra ways as below: Markdown: * ==This was marked== * ^^This was inserted^^ * ~~This was deleted~~ * H~2~0 * A^T^A Rendered: This was marked This was inserted This was deleted H 2 0 A T A List \u2693\ufe0e You can organize items into ordered and unordered lists. To create an ordered list, add line items with numbers followed by periods. The numbers don\u2019t have to be in numerical order, but the list should start with the number one. To create an unordered list, add dashes ( - ), asterisks ( * ), or plus signs ( + ) in front of line items. Indent one or more items to create a nested list. To create Task List, use checked box ( [ ] or [x] ) to show completed or uncompleted tasks. Markdown: 1. First item - Sub 1.1 - Sub 1.2 2. Second item * Sub 2.1 * Sub 2.2 3. Third item + Sub 3.1 + Sub 3.2 4. Fourth item 1. Sub 4.1 2. Sub 4.2 5. Task list * [x] Done * [ ] Not done yet Rendered: First item Sub 1.1 Sub 1.2 Second item Sub 2.1 Sub 2.2 Third item Sub 3.1 Sub 3.2 Fourth item Sub 4.1 Sub 4.2 Task list Done Not done yet Links \u2693\ufe0e To create a link, enclose the link text in brackets (e.g., [Google] ) and then follow it immediately with the URL in parentheses (e.g., (https://google.com) ). To quickly turn a URL or email address into a link, enclose it in angle brackets ( <> ). Markdown: [ Google ]( https://google.com ). <https://codeinsideout.com> <vuquangtrong@gmail.com> Rendered: Google https://codeinsideout.com vuquangtrong@gmail.com Reference-style links are a special kind of link that make URLs easier to display and read in Markdown. Reference-style links are constructed in two parts: the part you keep inline with your text and the part you store somewhere else in the file to keep the text easy to read. Markdown: In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a [ hobbit-hole ][ 1 ], and that means comfort. [ 1 ]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> \"Hobbit lifestyles\" Rendered: In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole , and that means comfort. Images \u2693\ufe0e To add an image, add an exclamation mark ( ! ), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title after the URL in the parentheses. ![ Image alt title ]( https://dummyimage.com/300x200 \"Image title\" ) Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Image alt title Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Image alt title Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Admonitions \u2693\ufe0e Default title !!! note Default title Note Default title Custom title !!! tip \"Custom title\" Custom title Custom title Custom title No title !!! info \"\" No title No title No title More details More content !!! success Embedded code ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` in side Success Embedded code def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] in side Other types note, seealso abstract, summary, tldr info, todo tip, hint, important success, check, done question, help, faq warning, caution, attention failure, fail, missing danger, error bug example quote, cite Collapse \u2693\ufe0e Collapsed ??? note Details Note Details Expanded ???+ note Expanded details Note Expanded details Tables \u2693\ufe0e markdown: | Syntax | Description | | ----------- | ----------- | | Header | Title | | Paragraph | Text | | Syntax | Description | Test Text | | :--- | :----: | ---: | | Header | Title | Here's this | | Paragraph | Text | And more | | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | rendered: Syntax Description Header Title Paragraph Text Syntax Description Test Text Header Title Here's this Paragraph Text And more Method Description GET Fetch resource PUT Update resource DELETE Delete resource Actions \u2693\ufe0e The KBD Extension is an inline processor for adding markdown syntax for inline <kbd> tags. Text that is wrapped in: double brackets [[button]] double braces {{menu}} or double parenthesis ((action)) will be wrapped with an HTML <kbd> tag with different classes. [[Ctrl]]+[[Alt]]+[[Del]] or [[Details]] ((Save)) or ((Run > Run As)) {{Double click}} or {{Long press}} Ctrl + Alt + Del or Details Save or Run > Run As Double click or Long press Code blocks \u2693\ufe0e Numbered ``` python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighted ``` python linenums=\"1\" hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Inline The `#!python range()` function is used to generate a sequence of numbers. The `#!cpp int main(void)` function is the entry point of user application. The range () function is used to generate a sequence of numbers. The int main ( void ) function is the entry point of user application. Tabs \u2693\ufe0e markdown: === \"C\" ``` c #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } ``` === \"C++\" ``` c ++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } ``` rendered: C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Footnotes \u2693\ufe0e Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ( [^1] ). Identifiers can be numbers or words, but they can\u2019t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself \u2014 in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ( [^1] : My footnote.). You don\u2019t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: This is the first footnote. [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` \\ Add as many paragraphs as you like. Here's a simple footnote, 1 and here's a longer one. 2 This is the first footnote. \u21a9 Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Markdown Syntax"},{"location":"posts/markdown_syntax/#markdown-syntax","text":"","title":"Markdown Syntax"},{"location":"posts/markdown_syntax/#metadata","text":"In a markdown file, if you add metadata in YAML format at the begining of the file, it will be used to create page.meta object. Metadata is not shown in the page content, but it is used in rendering template to HTML. It is recommended to have at least 3 fields title , description , and tags , in each post. --- title : Lorem ipsum dolor sit amet description : Nullam urna elit, malesuada eget finibus ut, ac tortor. tags : - tag1 - tag2 ---","title":"Metadata"},{"location":"posts/markdown_syntax/#headings","text":"To create a heading, add number signs ( # ) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three ( <h3> ), use three number signs ( ### My Header level 3 ). Please remember to always put a space between the number signs and the heading name.","title":"Headings"},{"location":"posts/markdown_syntax/#paragraphs","text":"Writing a paragraph is very straight forward. You just write down your sentences and they will be wrapped in <p> tags. To create paragraphs, use a blank line to separate one or more lines of text. To create a line break ( <br> ), end a line with two or more spaces, and then type return. You can add emphasis by making text bold or italic : To bold text, add two asterisks or underscores before and after a word or phrase To italicize text, add one asterisk or underscore before and after a word or phrase. To create a blockquote, add a > in front of a paragraph. Here is an example:","title":"Paragraphs"},{"location":"posts/markdown_syntax/#marks","text":"Beside standard marks to emphasize text as bold or italic , extended markdown supports some extra ways as below:","title":"Marks"},{"location":"posts/markdown_syntax/#list","text":"You can organize items into ordered and unordered lists. To create an ordered list, add line items with numbers followed by periods. The numbers don\u2019t have to be in numerical order, but the list should start with the number one. To create an unordered list, add dashes ( - ), asterisks ( * ), or plus signs ( + ) in front of line items. Indent one or more items to create a nested list. To create Task List, use checked box ( [ ] or [x] ) to show completed or uncompleted tasks.","title":"List"},{"location":"posts/markdown_syntax/#links","text":"To create a link, enclose the link text in brackets (e.g., [Google] ) and then follow it immediately with the URL in parentheses (e.g., (https://google.com) ). To quickly turn a URL or email address into a link, enclose it in angle brackets ( <> ).","title":"Links"},{"location":"posts/markdown_syntax/#images","text":"To add an image, add an exclamation mark ( ! ), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title after the URL in the parentheses. ![ Image alt title ]( https://dummyimage.com/300x200 \"Image title\" ) Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Image alt title Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Image alt title Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.","title":"Images"},{"location":"posts/markdown_syntax/#admonitions","text":"Default title !!! note Default title Note Default title Custom title !!! tip \"Custom title\" Custom title Custom title Custom title No title !!! info \"\" No title No title No title More details More content !!! success Embedded code ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` in side Success Embedded code def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] in side Other types note, seealso abstract, summary, tldr info, todo tip, hint, important success, check, done question, help, faq warning, caution, attention failure, fail, missing danger, error bug example quote, cite","title":"Admonitions"},{"location":"posts/markdown_syntax/#collapse","text":"Collapsed ??? note Details Note Details Expanded ???+ note Expanded details Note Expanded details","title":"Collapse"},{"location":"posts/markdown_syntax/#tables","text":"","title":"Tables"},{"location":"posts/markdown_syntax/#actions","text":"The KBD Extension is an inline processor for adding markdown syntax for inline <kbd> tags. Text that is wrapped in: double brackets [[button]] double braces {{menu}} or double parenthesis ((action)) will be wrapped with an HTML <kbd> tag with different classes. [[Ctrl]]+[[Alt]]+[[Del]] or [[Details]] ((Save)) or ((Run > Run As)) {{Double click}} or {{Long press}} Ctrl + Alt + Del or Details Save or Run > Run As Double click or Long press","title":"Actions"},{"location":"posts/markdown_syntax/#code-blocks","text":"Numbered ``` python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighted ``` python linenums=\"1\" hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Inline The `#!python range()` function is used to generate a sequence of numbers. The `#!cpp int main(void)` function is the entry point of user application. The range () function is used to generate a sequence of numbers. The int main ( void ) function is the entry point of user application.","title":"Code blocks"},{"location":"posts/markdown_syntax/#tabs","text":"","title":"Tabs"},{"location":"posts/markdown_syntax/#footnotes","text":"Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ( [^1] ). Identifiers can be numbers or words, but they can\u2019t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself \u2014 in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ( [^1] : My footnote.). You don\u2019t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: This is the first footnote. [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` \\ Add as many paragraphs as you like. Here's a simple footnote, 1 and here's a longer one. 2 This is the first footnote. \u21a9 Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Footnotes"}]}